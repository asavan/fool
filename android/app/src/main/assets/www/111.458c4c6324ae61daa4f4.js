"use strict";(self.webpackChunksuno=self.webpackChunksuno||[]).push([[111],{111:(e,n,a)=>{a.r(n),a.d(n,{default:()=>o});var t=a(746);const o=function(e,n,a,o){const c=e,d=(0,t.A)(["recv","open","error","close","socket_open","socket_close"]);let s=!1,i=null;const r=(n,a,t)=>{if(!i)return!1;if(!s)return!1;const o={from:e,to:t,action:n,data:a};return i.send(JSON.stringify(o))};return{connect:async function(a,t){const l=t.createSignalingChannel(e,a,n,o);l.on("close",(e=>d.call("socket_close",e))),l.on("open",(()=>{d.call("socket_open",{}),l.send("connected",{id:e},"all")})),l.on("error",(e=>{d.call("error",e)})),await l.ready();const f=new RTCPeerConnection(null);f.onicecandidate=e=>{const a={type:"candidate",candidate:null};e.candidate&&(a.candidate=e.candidate.candidate,a.sdpMid=e.candidate.sdpMid,a.sdpMLineIndex=e.candidate.sdpMLineIndex),n.log({candidate:e.candidate}),l.send("candidate",a,"server")},f.oniceconnectionstatechange=()=>{f.iceConnectionState},i=f.createDataChannel("gamechannel"+e),function(a,t){a.onmessage=function(e){n.log("data get "+e.data),d.call("recv",e.data)},a.onopen=function(){n.log("------ DATACHANNEL OPENED ------"),s=!0,t.send("close",{},"server"),t.close(),d.call("open",{id:e,sendRawTo:r})},a.onclose=function(){n.log("------ DC closed! ------"),s=!1},a.onerror=function(){}}(i,l);const u=await f.createOffer();return await f.setLocalDescription(u),l.on("message",(async e=>{e.from!==c&&"server"===e.from&&e.to===c&&(n.log("Websocket message received: ",e),"candidate"===e.action?(n.log("ON CANDIDATE"),e.data.candidate?await f.addIceCandidate(e.data):await f.addIceCandidate(null)):"answer"===e.action?f.setRemoteDescription(e.data):"connected"===e.action||e.action)})),l.send("offer",{type:"offer",sdp:u.sdp},"server")},on:function(e,n){return d.on(e,n)},registerHandler:function(e,n){d.setOnce("recv",(a=>{const t=JSON.parse(a),o=t.data,c=e[t.action];"function"==typeof c&&n.add((()=>c(o,t.from)))}))},sendRawTo:r}}}}]);