"use strict";(self.webpackChunksuno=self.webpackChunksuno||[]).push([[249],{249:(n,e,o)=>{o.r(e),o.d(e,{default:()=>t});var c=o(746);function t(n,e,o,t){const r=(0,c.A)(["close","disconnect","error","open","gameinit","reconnect","socket_open","socket_close"]);let l,s,i={};return{connect:function(c,a){return new Promise(((u,d)=>{const f=a.createSignalingChannel(n,c,e,t);s=f,f.on("error",(n=>{e.log("Connection to ws error "+n),d(n)})),f.on("message",(c=>{if(c.from!==n)if(c.to===n||"all"===c.to){if(!(c.ignore&&Array.isArray(c.ignore)&&c.ignore.includes(n)))return"connected"===c.action?o?(f.send("open",{id:n},c.from),r.call("open",{id:c.from})):void 0:r.actionKeys().includes(c.action)?(e.log("handlers.actionKeys"),r.call(c.action,c)):Object.keys(i).includes(c.action)?(e.log("callCurrentHandler"),function(n,o){const c=i[n];"function"==typeof c?l?l.add((()=>c(o.data,o.from))):e.log("No queue"):e.log("Not function")}(c.action,c)):void e.log("Unknown action "+c.action);e.log("user in ignore list")}else e.log("another user");else e.error("same user")})),f.on("close",(n=>r.call("socket_close",n))),f.on("open",(()=>(r.call("socket_open",{}),f.send("connected",{id:n},"all"),u())))}))},on:function(n,e){return r.on(n,e)},registerHandler:function(n,e){l=e,i=n},sendRawTo:(n,e,o)=>!!s&&s.send(n,e,o),sendRawAll:(n,o,c)=>!!s&&(e.log(o),s.send(n,o,"all",c))}}}}]);