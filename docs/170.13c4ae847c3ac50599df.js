"use strict";(self.webpackChunkfool=self.webpackChunkfool||[]).push([[170],{271:(n,e,o)=>{o.d(e,{Z:()=>t});const t=function(n){return{move:async e=>n.onChange(e)}}},170:(n,e,o)=>{function t(n){}o.r(e),o.d(e,{default:()=>u});let c="";const a={recv:t,open:t,socket_open:t,socket_close:t,close:t,error:t};function s(n,e,o){const t={from:c,action:n,data:e};return o.send(JSON.stringify(t))}function i(n,e){return new Promise(((e,o)=>{const c=new WebSocket(n),i={onmessage:t,send:(n,e)=>s(n,e,c),close:()=>{a.error=t,c.close()}};return c.onopen=function(n){a.socket_open(),s("connected",{},c),e(i)},c.onclose=function(n){a.socket_close()},c.onmessage=function(n){if(n.data instanceof Blob){const e=new FileReader;e.onload=()=>{i.onmessage(e.result)},e.readAsText(n.data)}else i.onmessage(n.data)},c.onerror=function(n){a.error(function(n){const e={};for(let o in n)e[o]=n[o];return JSON.stringify(e,((n,e)=>e instanceof Node?"Node":e instanceof Window?"Window":e)," ")}(n)),o(n)},i}))}const r=function(n,e,o){c=o;let t=!1,s=null;return{connect:async function(){const o=n.wh?n.wh:"https:"===e.protocol?null:"ws://"+e.hostname+":"+n.wsPort;if(null==o)throw"Can't determine ws address";const r=await i(o),d=new RTCPeerConnection(null);d.onicecandidate=n=>{const e={type:"candidate",candidate:null};n.candidate&&(e.candidate=n.candidate.candidate,e.sdpMid=n.candidate.sdpMid,e.sdpMLineIndex=n.candidate.sdpMLineIndex),r.send("candidate",e)},d.oniceconnectionstatechange=()=>{d.iceConnectionState},s=d.createDataChannel("gamechannel"),function(n,e){n.onmessage=function(n){a.recv(n.data)},n.onopen=function(){t=!0,e.send("close",{}),e.close(),a.open()},n.onclose=function(){t=!1},n.onerror=function(){}}(s,r);const l=await d.createOffer();await d.setLocalDescription(l),r.send("offer",{type:"offer",sdp:l.sdp}),r.onmessage=async function(n){const e=JSON.parse(n);e.from!==c&&"server"===e.from&&e.to===c&&("candidate"===e.action?e.data.candidate?await d.addIceCandidate(e.data):await d.addIceCandidate(null):"answer"===e.action?d.setRemoteDescription(e.data):"connected"===e.action||e.action)}},sendMessage:function(n){return!!s&&(!!t&&(s.send(n),t))},on:function(n,e){a[n]=e}}};var d=o(271),l=o(392);function f(n,e){const o={method:e};return o[e]=n,JSON.stringify(o)}function u(n,e,o,t){return new Promise(((c,a)=>{const s=r(o,n.location,o.color),i=e.getElementsByClassName("log")[0];s.on("error",(n=>{(0,l.cM)(o,n,i)})),s.on("socket_open",(()=>{const n=e.getElementsByClassName("grid")[0];n.style.backgroundColor="#AA0000",s.on("socket_close",(()=>{n.style.backgroundColor="black"}))})),s.on("open",(()=>{const a=t(n,e,o),i=(0,d.Z)(a);s.on("recv",(n=>{const e=JSON.parse(n),o=e[e.method],t=i[e.method];"function"==typeof t&&t(o)}));for(const[n,e]of Object.entries(i))a.on(n,(e=>s.sendMessage(f(e,n))));c(a)}));try{s.connect()}catch(n){(0,l.cM)(o,n,i),a(n)}}))}}}]);